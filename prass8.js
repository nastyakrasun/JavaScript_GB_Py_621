'use strict'

// 1. Где можно применить замыкания для практикума из седьмого урока. 
// Замыкание можно применить при расстановке фильтров для товаров в интернет-магазине. 
// также - для разовой перерисовки корзины при одновременном добавлении в неё нескольких штук одного товара.
// это благоприятно скажется на распределении ресурсов гаджета 
// (не постоянная реакция на череду изменений, а итоговое применение всех желаемых изменений сразу)
 
// 2. Не выполняя код, ответить, что выведет браузер и почему: (код всё равно выполняла, для проверки своих предположений)

// if (!("a" in window)) {
//     var a = 1;
//     alert(a);
// }
// alert(a);
// // браузер выведет: undefined 
// // почему: глобальная переменная window - это окно, в котором работает скрипт. 
// // переменная а в window не задана (верно). мы задаём её в локальной области видимости. далее - пытаемся вывести в глобальной.
// // в глобальной области видимости а не определена, поэтому интерпретатор возвращает undefined 

// var b = function a(x) {
//     x && a(--x);
// };
// alert(a);
// // !браузер выведет: ничего (думала, что undefined)
// // почему: в глобальной области видимости а не определена, b определена через а
// // поэтому (при вызове а) консоль выведет ошибку variable a is not defined - это понимаю и предвижу

// function a(x) {
//     return x * 2;
// }
// var a;
// alert(a);
// // браузер выведет: описание функции а
// // function a(x) {
// //     return x * 2;
// // }
// // почему: определили функцию a(x) и задали а, никак больше не определив её. 
// // попросили вывести а без аргумента - интерпретатор выведет описание ранее определённой (и не переопределённой) функции, 
// // с аргументом - соответствующее значение функции

// function b(x, y, a) {
//     arguments[2] = 10;
//     alert(a);
// }
// b(1, 2, 3);
// // браузер выведет: 10 (думала)
// // почему: задали функцию от 3х аргументов. последнему аргументу задали значение 10. попросили вывести а (последний аргумент). 
// // при вызове функции с любыми заданными значениями аргументов выведется определённое в теле функции последнее - 10.
// // !браузер выведет: 3, если стоит 'use strict' - это принять и запомнить сложнее

function a() {
    alert(this);
}
a.call(null);
// null, если стоит 'use strict'
// вызывается объект null, он есть в js, он и выводится (это понятно)
// [object Window] если не стоит 'use strict' 
// интерпретатор пишет, что вызвался какой-то объект, определённый в Window, не называя его. но нестрогий режим мы не рассматриваем
